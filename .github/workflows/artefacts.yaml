name: Deploy website
on: [workflow_dispatch]
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - dev
#     types:
#       - opened
#       - synchronize
#       - reopened
#       - edited
jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      npm-cache-dir: ${{ steps.npm-cache-dir.outputs.dir }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      # Cache dependencies to speed up the process
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          # path: ~/.npm
          # here is example hot to get output from previous step
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    # define the output name and path to it
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          # path: ~/.npm
          path: ${{ needs.test.outputs.npm-cache-dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
        # define the output with id and set-output
      - name: Publish js file filename
        id: publish
        run: find dist/assets/*.js -type f -exec echo ::set-output name=script-file::{} \;
        # create new artifact with the name dist-files and path dist with upload-artifact action
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
#           path: |
#             dist
#             package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
        # download the artifact with the name dist-files and use download-artifact action
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output files
        run: ls
        # get the output from the build job using needs object
      - name: Output script file
        run: echo ${{ needs.build.outputs.script-file }}
      - name: Deploy
        run: echo "Deploying..."
